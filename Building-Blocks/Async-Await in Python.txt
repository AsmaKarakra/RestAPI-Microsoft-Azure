The asynchronous way of programming is very popular in javascript. In NodeJS, you have the in-built support of 
implementing async functionality. In Python, building async applications is now supported by using the asyncio package. 
The asyncio is a style of concurrent programming, but it is not parallelism. It is more closely aligned with threading 
than with multiprocessing but is very much distinct
from both of these. asyncio uses cooperative multitasking.

Cooperative multitasking, also known as non-preemptive multitasking, is a style of computer multitasking in which the operating 
system never initiates a context switch from a running process to another process. Instead, processes voluntarily yield control 
periodically or when idle in order to enable multiple applications to be run simultaneously. 
This type of multitasking is called “cooperative” because all programs must cooperate for the entire scheduling scheme to work.


async keyword#

The async keyword is put in front of a function declaration to turn it into an asynchronous function. 
An asynchronous function is a function that knows how to expect the possibility of the await keyword being used to invoke asynchronous code.

Let’s learn the difference between a synchronous function and an asynchronous function.
